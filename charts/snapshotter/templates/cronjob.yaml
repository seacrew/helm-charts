apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "snapshotter.fullname" . }}
  labels:
    {{- include "snapshotter.labels" . | nindent 4 }}
spec:
  schedule: "{{ .Values.snapshotter.schedule }}"
  jobTemplate:
    spec:
      template:
        spec:
          {{- with .Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          restartPolicy: {{ .Values.snapshotter.restartPolicy }}
          serviceAccountName: {{ include "snapshotter.serviceAccountName" . }}
          securityContext:
            {{- toYaml .Values.podSecurityContext | nindent 12 }}
          containers:
            - name: snapshotter
              securityContext:
                {{- toYaml .Values.securityContext | nindent 16 }}
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
              env:
                - name: RELEASE
                  value: "{{ .Release.Name }}"
                - name: NAMESPACE
                  value: "{{ .Release.Namespace }}"
                - name: RETENTION
                  value: "{{ .Values.snapshotter.rententionInDays }}"
                - name: VOLUMES
                  value: "{{ .Values.snapshotter.volumeClaims }}"
              command:
               - sh
               - "-c"
               - |
                 /bin/bash <<'SCRIPT'

                 dt=$(date '+%Y-%m-%d-%H-%M')

                 echo "Creating new snapshots"
                 for claim in ${VOLUMES//,/ }; do

                 cat <<EOF | kubectl apply -f -
                   apiVersion: snapshot.storage.k8s.io/v1
                   kind: VolumeSnapshot
                   metadata:
                     name: $claim-$dt
                     namespace: $NAMESPACE
                     labels:
                       app.kubernetes.io/managed-by: snapshotter
                       app.kubernetes.io/name: $RELEASE
                   spec:
                     source:
                       persistentVolumeClaimName: $claim
                 EOF

                 done

                 echo "Deleting snapshots older than $RETENTION days"
                 snapshots=$(kubectl -n $NAMESPACE get volumesnapshots -l app.kubernetes.io/managed-by=snapshotter,app.kubernetes.io/name=$RELEASE --no-headers -o custom-columns=":metadata.name")

                 cutoff=$(date -d "$RETENTION days ago" +%s)

                 for snapshot in $snapshots; do
                   creation_date=${snapshot: -16}
                   creation_date=$(printf $creation_date | awk -F'-' '{printf $1"-"$2"-"$3" "$4":"$5":00"}')
                   creation_date=$(date -d "$creation_date" +%s)
                   if (($cutoff > $creation_date)); then
                     kubectl -n $NAMESPACE delete volumesnapshot $snapshot
                   fi
                 done

                 SCRIPT
          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
